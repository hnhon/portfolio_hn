{"version":3,"sources":["Navbar.js","About.js","Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","About","id","rel","target","Portfolio","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oNAmBeA,MAjBf,WAGI,OACI,6BACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SACX,uBAAGC,KAAK,QAAR,SACA,uBAAGA,KAAK,cAAR,kBC2CTC,MApDf,WACI,OACI,yBAAKC,GAAG,SACR,qCACA,uBAAGA,GAAG,aAAN,0HACA,0DAA+B,uBAAGF,KAAK,oCAAoCG,IAAI,sBAAsBC,OAAO,SAASL,UAAU,UAAhG,YAA/B,QAAyJ,uBAAGC,KAAK,2BAA2BG,IAAI,sBAAsBC,OAAO,SAASL,UAAU,UAAvF,UAAzJ,KACA,2EACA,4BACI,oCAGA,mCAGA,0CAGA,uCAGA,0CAGA,qCAGA,mCAGA,uCAGA,mCAGA,2CAGA,qCAIJ,gEACA,4BACI,uFACA,0EACA,6CChBGM,MA9Bf,WACI,OACI,yBAAKH,GAAG,aACJ,yBAAKH,UAAU,uBACX,yCACA,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,SAAd,eACA,8FACA,+CACA,oDACA,mDACA,mEACA,uBAAGC,KAAK,wCAAwCI,OAAO,SAASD,IAAI,sBAAsBJ,UAAU,UAApG,aAEJ,yBAAKA,UAAU,oBACX,8CACA,yIACA,8CACA,uBAAGC,KAAK,wCAAwCI,OAAO,SAASD,IAAI,sBAAsBJ,UAAU,UAApG,aAEJ,yBAAKA,UAAU,oBACX,2CACA,0IACA,uBAAGC,KAAK,qCAAqCI,OAAO,SAASD,IAAI,sBAAsBJ,UAAU,UAAjG,gBCVLO,MAVf,WACE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.61911909.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar() {\r\n    // const [isActive, setIsActive] = useState(false);\r\n    \r\n    return (\r\n        <div>\r\n            <nav className='nav'>\r\n                <div className='nav-container'>\r\n                    <div className='links'>\r\n                        <a href='#top'>About</a>\r\n                        <a href='#portfolio'>Portfolio</a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div id='about'>\r\n        <h2>About</h2>\r\n        <p id='nav-about'>Hi, I am a self-taught web developer. I learn by building stuffs and enjoy learning new skills from differnt projects.</p>\r\n        <p>Feel free to contact me via <a href='https://linkedin.com/in/hiunamhon' rel=\"noopener noreferrer\" target=\"_blank\" className='button'>Linkedin</a> and <a href='https://github.com/hnhon' rel=\"noopener noreferrer\" target=\"_blank\" className='button'>Github</a>.</p>\r\n        <p>List of skills I have been learning so far: </p>\r\n        <ul>\r\n            <li>\r\n                Html\r\n            </li>\r\n            <li>\r\n                CSS\r\n            </li>\r\n            <li>\r\n                JavaScript\r\n            </li>\r\n            <li>\r\n                Node.js\r\n            </li>\r\n            <li>\r\n                Express.js\r\n            </li>\r\n            <li>\r\n                React\r\n            </li>\r\n            <li>\r\n                ES6\r\n            </li>\r\n            <li>\r\n                MongoDB\r\n            </li>\r\n            <li>\r\n                Git\r\n            </li>\r\n            <li>\r\n                RESTful API\r\n            </li>\r\n            <li>\r\n                Json\r\n            </li>\r\n        </ul>\r\n        <p>Skills I am currently working on:</p>\r\n        <ul>\r\n            <li>MERN Stack: look forward to build a full stack web app.</li>\r\n            <li>Responsive Web App: mobile first approach.</li>\r\n            <li>React Hook</li>\r\n        </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction Portfolio () {\r\n    return (\r\n        <div id='portfolio'>\r\n            <div className='portfolio-container'>\r\n                <h2>Portfolio</h2>\r\n                <div className='single-portfolio'>\r\n                    <h3 className='first'>Weather App</h3>\r\n                    <p>First App I built on Node.js. Enter City to check local weather</p>\r\n                    <p>Backend: Node.Js</p>\r\n                    <p>Framework: Express.Js</p>\r\n                    <p>API: Openweather API</p>\r\n                    <p>Frontend: Html, CSS, JavaScript, EJS</p>\r\n                    <a href='https://weatherappdemo.herokuapp.com/' target='_blank' rel=\"noopener noreferrer\" className='button'>See Live</a>\r\n                </div>\r\n                <div className='single-portfolio'>\r\n                    <h3>To Do List App</h3>\r\n                    <p>My first React App. Creating using Create-reate-app. Implement LocalStorage to store data without database</p>\r\n                    <p>Frontend: React</p>\r\n                    <a href='https://hnhon.github.io/todolistdemo/' target='_blank' rel=\"noopener noreferrer\" className='button'>See Live</a>\r\n                </div>\r\n                <div className='single-portfolio'>\r\n                    <h3>Simple Game</h3>\r\n                    <p>A game written by vanilla JavaScript, Html and CSS. Click the image to match the RGB value to win the game.</p>\r\n                    <a href='https://hnhon.github.io/colorgame/' target='_blank' rel=\"noopener noreferrer\" className='button'>See Live</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Portfolio;","import React from 'react';\nimport Navbar from './Navbar';\nimport About from './About';\nimport Portfolio from './Portfolio';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Navbar />\n      <About />\n      <Portfolio />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}